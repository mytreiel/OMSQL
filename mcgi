function Show-MainForm {

	#----------------------------------------------
	#region Import the Assemblies
	#----------------------------------------------
	[void][reflection.assembly]::Load('System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')
	[void][reflection.assembly]::Load('System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')
	#endregion Import Assemblies

	#----------------------------------------------
	#region Generated Form Objects
	#----------------------------------------------
	[System.Windows.Forms.Application]::EnableVisualStyles()
	$formMC = New-Object 'System.Windows.Forms.Form'
	$buttonPause = New-Object 'System.Windows.Forms.Button'
	$combobox_button = New-Object 'System.Windows.Forms.ComboBox'
	$labelMouse_button = New-Object 'System.Windows.Forms.Label'
	$labelClicks = New-Object 'System.Windows.Forms.Label'
	$labelDelayms = New-Object 'System.Windows.Forms.Label'
	$checkboxLimit = New-Object 'System.Windows.Forms.CheckBox'
	$textbox_limit = New-Object 'System.Windows.Forms.TextBox'
	$textbox_delay = New-Object 'System.Windows.Forms.TextBox'
	$buttonStop = New-Object 'System.Windows.Forms.Button'
	$buttonStart = New-Object 'System.Windows.Forms.Button'
	$menustrip1 = New-Object 'System.Windows.Forms.MenuStrip'
	$menuToolStripMenuItem = New-Object 'System.Windows.Forms.ToolStripMenuItem'
	$startToolStripMenuItem = New-Object 'System.Windows.Forms.ToolStripMenuItem'
	$stopToolStripMenuItem = New-Object 'System.Windows.Forms.ToolStripMenuItem'
	$exitToolStripMenuItem = New-Object 'System.Windows.Forms.ToolStripMenuItem'
	$pauseToolStripMenuItem = New-Object 'System.Windows.Forms.ToolStripMenuItem'
	$InitialFormWindowState = New-Object 'System.Windows.Forms.FormWindowState'
	#endregion Generated Form Objects

	#----------------------------------------------
	# User Generated Script
	#----------------------------------------------
	
	$formMC_Load={
		if ($startToolStripMenuItem.Checked -eq $true)
		{
			$buttonStart.Enabled = $false
			$buttonPause.Enabled = $true
			$buttonStop.Enabled = $true
		}
		elseif ($startToolStripMenuItem.Checked -eq $false)
		{
			$buttonStart.Enabled = $true
			$combobox_button.SelectedItem = 'Left'
			$buttonPause.Enabled = $false
			$buttonStop.Enabled = $false
		}
		
	}
	
	$labelDelayms_Click={
		#TODO: Place custom script here
		
	}
	
	$labelClicks_Click={
		#TODO: Place custom script here
		
	}
	
	$buttonStart_Click={
		$startToolStripMenuItem.PerformClick()
		
	}
	
	$buttonStop_Click={
		$stopToolStripMenuItem.PerformClick()
		
	}
	
	$buttonPause_Click = {
		$pauseToolStripMenuItem.PerformClick()
		
	}
	
	#region Control Helper Functions
	function Update-ComboBox
	{
	<#
		.SYNOPSIS
			This functions helps you load items into a ComboBox.
		
		.DESCRIPTION
			Use this function to dynamically load items into the ComboBox control.
		
		.PARAMETER ComboBox
			The ComboBox control you want to add items to.
		
		.PARAMETER Items
			The object or objects you wish to load into the ComboBox's Items collection.
		
		.PARAMETER DisplayMember
			Indicates the property to display for the items in this control.
			
		.PARAMETER ValueMember
			Indicates the property to use for the value of the control.
		
		.PARAMETER Append
			Adds the item(s) to the ComboBox without clearing the Items collection.
		
		.EXAMPLE
			Update-ComboBox $combobox1 "Red", "White", "Blue"
		
		.EXAMPLE
			Update-ComboBox $combobox1 "Red" -Append
			Update-ComboBox $combobox1 "White" -Append
			Update-ComboBox $combobox1 "Blue" -Append
		
		.EXAMPLE
			Update-ComboBox $combobox1 (Get-Process) "ProcessName"
		
		.NOTES
			Additional information about the function.
	#>
		
		param
		(
			[Parameter(Mandatory = $true)]
			[ValidateNotNull()]
			[System.Windows.Forms.ComboBox]
			$ComboBox,
			[Parameter(Mandatory = $true)]
			[ValidateNotNull()]
			$Items,
			[Parameter(Mandatory = $false)]
			[string]$DisplayMember,
			[Parameter(Mandatory = $false)]
			[string]$ValueMember,
			[switch]
			$Append
		)
		
		if (-not $Append)
		{
			$ComboBox.Items.Clear()
		}
		
		if ($Items -is [Object[]])
		{
			$ComboBox.Items.AddRange($Items)
		}
		elseif ($Items -is [System.Collections.IEnumerable])
		{
			$ComboBox.BeginUpdate()
			foreach ($obj in $Items)
			{
				$ComboBox.Items.Add($obj)
			}
			$ComboBox.EndUpdate()
		}
		else
		{
			$ComboBox.Items.Add($Items)
		}
		
		$ComboBox.DisplayMember = $DisplayMember
		$ComboBox.ValueMember = $ValueMember
	}
	#endregion
	
	function Form_closing
	{
		
		$question = "Are you sure ?"
		$caption = "Exit ?"
		if ([System.Windows.Forms.MessageBox]::Show($Question, $Caption, [System.Windows.Forms.MessageBoxButtons]::YesNo, 'Question') -eq 'Yes')
		{
			$_.Cancel = $false
		}
		else
		{
			
			$_.Cancel = $true
			
		}
	}
	
	
	$checkboxLimit_CheckedChanged={
		#TODO: Place custom script here
		if ($checkboxLimit.Checked -eq $true)
		{
			$textbox_limit.Enabled = $true
			$formMC.Refresh()
		}
		elseif ($checkboxLimit.Checked -eq $false)
		{
			$textbox_limit.Enabled = $false
			$formMC.Refresh()
		}
	}
	
	$startToolStripMenuItem_Click = {
		$scriptblock = {
			function Click-MouseButton
			{
				param (
					[Parameter(Mandatory = $true)]
					[ValidateNotNull()]
					[string]$Button,
					[Parameter(Mandatory = $true)]
					[ValidateNotNull()]
					[int]$Delay,
					[Parameter(Mandatory = $false)]
					[int]$Limit = 0
					
				)
				
				$signature = @' 
      [DllImport("user32.dll", CallingConvention=CallingConvention.StdCall)]
      public static extern void mouse_event(long dwFlags, long dx, long dy, long cButtons, long dwExtraInfo);
'@
				
				$SendMouseClick = Add-Type -memberDefinition $signature -name "Win32MouseEventNew" -namespace Win32Functions -passThru
				if ($Limit -eq 0)
				{
					if ($Button -eq "Left")
					{
						While ($limit -eq 0)
						{
							$SendMouseClick::mouse_event(0x00000002, 0, 0, 0, 0);
							$SendMouseClick::mouse_event(0x00000004, 0, 0, 0, 0);
							Start-Sleep -Milliseconds $Delay
						}
						
					}
					if ($Button -eq "Right")
					{
						While ($limit -eq 0)
						{
							$SendMouseClick::mouse_event(0x00000008, 0, 0, 0, 0);
							$SendMouseClick::mouse_event(0x00000010, 0, 0, 0, 0);
							Start-Sleep -Milliseconds $Delay
						}
					}
					if ($Button -eq "Middle")
					{
						While ($limit -eq 0)
						{
							$SendMouseClick::mouse_event(0x00000020, 0, 0, 0, 0);
							$SendMouseClick::mouse_event(0x00000040, 0, 0, 0, 0);
							Start-Sleep -Milliseconds $Delay
						}
					}
				}
				if ($Limit -gt 0)
				{
					
					if ($Button -eq "Left")
					{
						for ($i = 0; $i -le $Limit; $i++)
						{
							$SendMouseClick::mouse_event(0x00000002, 0, 0, 0, 0);
							$SendMouseClick::mouse_event(0x00000004, 0, 0, 0, 0);
							Start-Sleep -Milliseconds $Delay
						}
						
					}
					if ($Button -eq "Right")
					{
						for ($i = 0; $i -le $Limit; $i++)
						{
							$SendMouseClick::mouse_event(0x00000008, 0, 0, 0, 0);
							$SendMouseClick::mouse_event(0x00000010, 0, 0, 0, 0);
							Start-Sleep -Milliseconds $Delay
						}
					}
					if ($Button -eq "Middle")
					{
						for ($i = 0; $i -le $Limit; $i++)
						{
							$SendMouseClick::mouse_event(0x00000020, 0, 0, 0, 0);
							$SendMouseClick::mouse_event(0x00000040, 0, 0, 0, 0);
							Start-Sleep -Milliseconds $Delay
						}
					}
				}
				
			}
			Click-MouseButton -Button $args[0] -delay $args[1] -Limit $args[2]
		}
		Start-Job -Name "auto_click" -ScriptBlock $scriptblock -ArgumentList $($combobox_button.SelectedItem), $($textbox_delay.Text), $($textbox_limit.Text)
		$combobox_button.Enabled = $false
		$checkboxLimit.Enabled = $false
		$textbox_delay.Enabled = $false
		if($checkboxLimit.Checked -eq $true)
		{
			$textbox_limit.Enabled = $false
		}
		$startToolStripMenuItem.Checked = $true
		$formMC.Refresh()
		if ($startToolStripMenuItem.Checked -eq $true)
		{
			$buttonStart.Enabled = $false
			$buttonPause.Enabled = $true
			$buttonStop.Enabled = $true
		}
		elseif ($startToolStripMenuItem.Checked -eq $false)
		{
			$buttonStart.Enabled = $true
			$buttonPause.Enabled = $false
			$buttonStop.Enabled = $false
		}
		$formMC.Refresh()
	}
	
	$stopToolStripMenuItem_Click={
		Get-Job -Name 'auto_click' | Stop-Job | Remove-Job -ea SilentlyContinue
		$combobox_button.Enabled = $true
		$checkboxLimit.Enabled = $true
		$textbox_delay.Enabled = $true
		if ($checkboxLimit.Checked -eq $true)
		{
			$textbox_limit.Enabled = $true
		}
		$startToolStripMenuItem.Checked = $false
		$formMC.Refresh()
		if ($startToolStripMenuItem.Checked -eq $true)
		{
			$buttonStart.Enabled = $false
			$buttonPause.Enabled = $true
			$buttonStop.Enabled = $true
		}
		elseif ($startToolStripMenuItem.Checked -eq $false)
		{
			$buttonStart.Enabled = $true
			$buttonPause.Enabled = $false
			$buttonStop.Enabled = $false
		}
		$formMC.Refresh()
		
	}
	
	$exitToolStripMenuItem_Click={
		$formMC.Close()
		
	}
	
	$pauseToolStripMenuItem_Click = {
		if ($pauseToolStripMenuItem.Checked -eq $false)
		{
			Get-Job -Name 'auto_click' | Stop-Job | Remove-Job
			$combobox_button.Enabled = $false
			$checkboxLimit.Enabled = $false
			$textbox_delay.Enabled = $false
			if ($checkboxLimit.Checked -eq $true)
			{
				$textbox_limit.Enabled = $true
			}
			$formMC.Refresh()
			$pauseToolStripMenuItem.Checked = $true
			$formMC.Refresh()
		}
		elseif ($pauseToolStripMenuItem.Checked -eq $true)
		{
			$startToolStripMenuItem.PerformClick()
			$pauseToolStripMenuItem.Checked = $false
			$formMC.Refresh()
		}
		
	}
	
	
	$formMC_FormClosing=[System.Windows.Forms.FormClosingEventHandler]{
	#Event Argument: $_ = [System.Windows.Forms.FormClosingEventArgs]
		Form_closing
		
	}
	
	$formMC_KeyDown=[System.Windows.Forms.KeyEventHandler]{
	#Event Argument: $_ = [System.Windows.Forms.KeyEventArgs]
		if ($_.KeyCode -eq 'CTRL+S')
		{
			$startToolStripMenuItem_Click
		}
		if ($_.KeyCode -eq 'CTRL+SHIFT+Q')
		{
			$formMC.Close()
		}
		if ($_.KeyCode -eq 'CTRL+Q')
		{
			$stopToolStripMenuItem_Click
		}
		if ($_.KeyCode -eq 'CTRL+P')
		{
			$stopToolStripMenuItem_Click
		}
	}
	
	
	
	
	$combobox_button_SelectedIndexChanged={
		
		
	}
	
	# --End User Generated Script--
	#----------------------------------------------
	#region Generated Events
	#----------------------------------------------
	
	$Form_StateCorrection_Load=
	{
		#Correct the initial state of the form to prevent the .Net maximized form issue
		$formMC.WindowState = $InitialFormWindowState
	}
	
	$Form_Cleanup_FormClosed=
	{
		#Remove all event handlers from the controls
		try
		{
			$buttonPause.remove_Click($buttonPause_Click)
			$combobox_button.remove_SelectedIndexChanged($combobox_button_SelectedIndexChanged)
			$labelClicks.remove_Click($labelClicks_Click)
			$labelDelayms.remove_Click($labelDelayms_Click)
			$checkboxLimit.remove_CheckedChanged($checkboxLimit_CheckedChanged)
			$buttonStop.remove_Click($buttonStop_Click)
			$buttonStart.remove_Click($buttonStart_Click)
			$formMC.remove_FormClosing($formMC_FormClosing)
			$formMC.remove_Load($formMC_Load)
			$formMC.remove_KeyDown($formMC_KeyDown)
			$startToolStripMenuItem.remove_Click($startToolStripMenuItem_Click)
			$stopToolStripMenuItem.remove_Click($stopToolStripMenuItem_Click)
			$exitToolStripMenuItem.remove_Click($exitToolStripMenuItem_Click)
			$pauseToolStripMenuItem.remove_Click($pauseToolStripMenuItem_Click)
			$formMC.remove_Load($Form_StateCorrection_Load)
			$formMC.remove_FormClosed($Form_Cleanup_FormClosed)
		}
		catch { Out-Null <# Prevent PSScriptAnalyzer warning #> }
	}
	#endregion Generated Events

	#----------------------------------------------
	#region Generated Form Code
	#----------------------------------------------
	$formMC.SuspendLayout()
	$menustrip1.SuspendLayout()
	#
	# formMC
	#
	$formMC.Controls.Add($buttonPause)
	$formMC.Controls.Add($combobox_button)
	$formMC.Controls.Add($labelMouse_button)
	$formMC.Controls.Add($labelClicks)
	$formMC.Controls.Add($labelDelayms)
	$formMC.Controls.Add($checkboxLimit)
	$formMC.Controls.Add($textbox_limit)
	$formMC.Controls.Add($textbox_delay)
	$formMC.Controls.Add($buttonStop)
	$formMC.Controls.Add($buttonStart)
	$formMC.Controls.Add($menustrip1)
	$formMC.AutoScaleDimensions = '6, 13'
	$formMC.AutoScaleMode = 'Font'
	$formMC.ClientSize = '270, 213'
	$formMC.FormBorderStyle = 'Fixed3D'
	$formMC.MainMenuStrip = $menustrip1
	$formMC.MaximizeBox = $False
	$formMC.Name = 'formMC'
	$formMC.SizeGripStyle = 'Hide'
	$formMC.Text = 'MC'
	$formMC.add_FormClosing($formMC_FormClosing)
	$formMC.add_Load($formMC_Load)
	$formMC.add_KeyDown($formMC_KeyDown)
	#
	# buttonPause
	#
	$buttonPause.Location = '98, 175'
	$buttonPause.Name = 'buttonPause'
	$buttonPause.Size = '58, 23'
	$buttonPause.TabIndex = 10
	$buttonPause.Text = 'Pause'
	$buttonPause.UseCompatibleTextRendering = $True
	$buttonPause.UseVisualStyleBackColor = $True
	$buttonPause.add_Click($buttonPause_Click)
	#
	# combobox_button
	#
	$combobox_button.DisplayMember = '0'
	$combobox_button.DropDownStyle = 'DropDownList'
	$combobox_button.FormattingEnabled = $True
	[void]$combobox_button.Items.Add('Right')
	[void]$combobox_button.Items.Add('Left')
	[void]$combobox_button.Items.Add('Middle')
	$combobox_button.Location = '146, 24'
	$combobox_button.Name = 'combobox_button'
	$combobox_button.Size = '100, 21'
	$combobox_button.TabIndex = 8
	$combobox_button.add_SelectedIndexChanged($combobox_button_SelectedIndexChanged)
	#
	# labelMouse_button
	#
	$labelMouse_button.AutoSize = $True
	$labelMouse_button.Location = '64, 24'
	$labelMouse_button.Name = 'labelMouse_button'
	$labelMouse_button.Size = '76, 17'
	$labelMouse_button.TabIndex = 7
	$labelMouse_button.Text = 'Mouse_button'
	$labelMouse_button.UseCompatibleTextRendering = $True
	#
	# labelClicks
	#
	$labelClicks.AutoSize = $True
	$labelClicks.Location = '105, 125'
	$labelClicks.Name = 'labelClicks'
	$labelClicks.Size = '35, 17'
	$labelClicks.TabIndex = 6
	$labelClicks.Text = 'Clicks'
	$labelClicks.UseCompatibleTextRendering = $True
	$labelClicks.add_Click($labelClicks_Click)
	#
	# labelDelayms
	#
	$labelDelayms.AutoSize = $True
	$labelDelayms.Location = '81, 59'
	$labelDelayms.Name = 'labelDelayms'
	$labelDelayms.Size = '59, 17'
	$labelDelayms.TabIndex = 5
	$labelDelayms.Text = 'Delay (ms)'
	$labelDelayms.UseCompatibleTextRendering = $True
	$labelDelayms.add_Click($labelDelayms_Click)
	#
	# checkboxLimit
	#
	$checkboxLimit.Location = '146, 95'
	$checkboxLimit.Name = 'checkboxLimit'
	$checkboxLimit.Size = '100, 24'
	$checkboxLimit.TabIndex = 4
	$checkboxLimit.Text = 'Limit'
	$checkboxLimit.UseCompatibleTextRendering = $True
	$checkboxLimit.UseVisualStyleBackColor = $True
	$checkboxLimit.add_CheckedChanged($checkboxLimit_CheckedChanged)
	#
	# textbox_limit
	#
	$textbox_limit.Enabled = $False
	$textbox_limit.Location = '146, 122'
	$textbox_limit.Name = 'textbox_limit'
	$textbox_limit.Size = '100, 20'
	$textbox_limit.TabIndex = 3
	$textbox_limit.Text = '0'
	#
	# textbox_delay
	#
	$textbox_delay.Location = '146, 59'
	$textbox_delay.Name = 'textbox_delay'
	$textbox_delay.Size = '100, 20'
	$textbox_delay.TabIndex = 2
	$textbox_delay.Text = '1000'
	#
	# buttonStop
	#
	$buttonStop.Location = '186, 175'
	$buttonStop.Name = 'buttonStop'
	$buttonStop.Size = '60, 23'
	$buttonStop.TabIndex = 1
	$buttonStop.Text = 'Stop'
	$buttonStop.UseCompatibleTextRendering = $True
	$buttonStop.UseVisualStyleBackColor = $True
	$buttonStop.add_Click($buttonStop_Click)
	#
	# buttonStart
	#
	$buttonStart.Location = '12, 175'
	$buttonStart.Name = 'buttonStart'
	$buttonStart.Size = '57, 23'
	$buttonStart.TabIndex = 0
	$buttonStart.Text = 'Start'
	$buttonStart.UseCompatibleTextRendering = $True
	$buttonStart.UseVisualStyleBackColor = $True
	$buttonStart.add_Click($buttonStart_Click)
	#
	# menustrip1
	#
	[void]$menustrip1.Items.Add($menuToolStripMenuItem)
	$menustrip1.Location = '0, 0'
	$menustrip1.Name = 'menustrip1'
	$menustrip1.Size = '270, 24'
	$menustrip1.TabIndex = 9
	$menustrip1.Text = 'menustrip1'
	#
	# menuToolStripMenuItem
	#
	[void]$menuToolStripMenuItem.DropDownItems.Add($startToolStripMenuItem)
	[void]$menuToolStripMenuItem.DropDownItems.Add($stopToolStripMenuItem)
	[void]$menuToolStripMenuItem.DropDownItems.Add($pauseToolStripMenuItem)
	[void]$menuToolStripMenuItem.DropDownItems.Add($exitToolStripMenuItem)
	$menuToolStripMenuItem.Name = 'menuToolStripMenuItem'
	$menuToolStripMenuItem.Size = '50, 20'
	$menuToolStripMenuItem.Text = 'Menu'
	#
	# startToolStripMenuItem
	#
	$startToolStripMenuItem.Name = 'startToolStripMenuItem'
	$startToolStripMenuItem.ShortcutKeys = [System.Windows.Forms.Keys]::S -bor [System.Windows.Forms.Keys]::Control 
	$startToolStripMenuItem.Size = '168, 22'
	$startToolStripMenuItem.Text = 'Start'
	$startToolStripMenuItem.add_Click($startToolStripMenuItem_Click)
	#
	# stopToolStripMenuItem
	#
	$stopToolStripMenuItem.Name = 'stopToolStripMenuItem'
	$stopToolStripMenuItem.ShortcutKeys = [System.Windows.Forms.Keys]::Q -bor [System.Windows.Forms.Keys]::Control 
	$stopToolStripMenuItem.Size = '168, 22'
	$stopToolStripMenuItem.Text = 'Stop'
	$stopToolStripMenuItem.add_Click($stopToolStripMenuItem_Click)
	#
	# exitToolStripMenuItem
	#
	$exitToolStripMenuItem.Name = 'exitToolStripMenuItem'
	$exitToolStripMenuItem.ShortcutKeys = [System.Windows.Forms.Keys]::Q -bor [System.Windows.Forms.Keys]::Shift -bor [System.Windows.Forms.Keys]::Control 
	$exitToolStripMenuItem.Size = '168, 22'
	$exitToolStripMenuItem.Text = 'Exit'
	$exitToolStripMenuItem.add_Click($exitToolStripMenuItem_Click)
	#
	# pauseToolStripMenuItem
	#
	$pauseToolStripMenuItem.Name = 'pauseToolStripMenuItem'
	$pauseToolStripMenuItem.ShortcutKeys = [System.Windows.Forms.Keys]::P -bor [System.Windows.Forms.Keys]::Control 
	$pauseToolStripMenuItem.Size = '168, 22'
	$pauseToolStripMenuItem.Text = 'Pause'
	$pauseToolStripMenuItem.add_Click($pauseToolStripMenuItem_Click)
	$menustrip1.ResumeLayout()
	$formMC.ResumeLayout()
	#endregion Generated Form Code

	#----------------------------------------------

	#Save the initial state of the form
	$InitialFormWindowState = $formMC.WindowState
	#Init the OnLoad event to correct the initial state of the form
	$formMC.add_Load($Form_StateCorrection_Load)
	#Clean up the control events
	$formMC.add_FormClosed($Form_Cleanup_FormClosed)
	#Show the Form
	return $formMC.ShowDialog()

} 

Show-MainForm | Out-Null
